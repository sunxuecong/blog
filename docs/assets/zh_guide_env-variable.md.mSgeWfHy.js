import{_ as e,c as o,o as a,a3 as t}from"./chunks/framework.CokgVZ6D.js";const g=JSON.parse('{"title":"环境变量","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/env-variable.md","filePath":"zh/guide/env-variable.md","lastUpdated":1719483438000}'),i={name:"zh/guide/env-variable.md"},r=t('<h1 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h1><h2 id="通用变量" tabindex="-1">通用变量 <a class="header-anchor" href="#通用变量" aria-label="Permalink to &quot;通用变量&quot;">​</a></h2><p>通用变量是所有环境都应该保持一致的变量，例如项目名称、项目根目录等。在<code>.env</code>文件中定义这些变量，以便在整个项目中使用。</p><h3 id="vite-base-url" tabindex="-1">VITE_BASE_URL <a class="header-anchor" href="#vite-base-url" aria-label="Permalink to &quot;VITE_BASE_URL&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>/</code></li></ul><p>如果你的项目是需要某个子路径下运行的，那么你可以使用<code>VITE_BASE_URL</code>变量来设置子路径。例如，如果你的项目运行在<code>https://example.com/my-app</code>，你可以设置<code>VITE_BASE_URL</code>为<code>/my-app</code>。项目中相关配置会自动修改</p><h3 id="vite-app-name" tabindex="-1">VITE_APP_NAME <a class="header-anchor" href="#vite-app-name" aria-label="Permalink to &quot;VITE_APP_NAME&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>Nova - Admin</code></li></ul><p>如果你的项目需要设置一个名称，例如<code>Sain-admin</code>，你可以设置该变量的值为你的项目名称。</p><h3 id="vite-auth-route-mode" tabindex="-1">VITE_AUTH_ROUTE_MODE <a class="header-anchor" href="#vite-auth-route-mode" aria-label="Permalink to &quot;VITE_AUTH_ROUTE_MODE&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>dynamic | static</code></li><li><strong>默认：</strong> <code>dynamic</code></li></ul><p>项目中提供两种路由模式：<code>dynamic</code>和<code>static</code>。如果你不需要配合后端实现动态路由，你可以设置<code>VITE_AUTH_ROUTE_MODE</code>为<code>static</code>。</p><h3 id="vite-home-path" tabindex="-1">VITE_HOME_PATH <a class="header-anchor" href="#vite-home-path" aria-label="Permalink to &quot;VITE_HOME_PATH&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>/dashboard/workbench</code></li></ul><p>设置登陆后跳转地址,这里应当配置你登录完成后立即跳转的地址，404返回首页的情况下也是优先使用该路径</p><h3 id="vite-storage-prefix" tabindex="-1">VITE_STORAGE_PREFIX <a class="header-anchor" href="#vite-storage-prefix" aria-label="Permalink to &quot;VITE_STORAGE_PREFIX&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>null</code></li></ul><p>设置全局存储的前缀，例如<code>VITE_STORAGE_PREFIX=nova_</code>，那么使用<code>src\\utils\\storage.ts</code>在<code>localStorage</code>和<code>sessionStorage</code>中的数据都会加上<code>nova_</code>前缀，例如<code>nova_token</code>。</p><h3 id="vite-copyright-info" tabindex="-1">VITE_COPYRIGHT_INFO <a class="header-anchor" href="#vite-copyright-info" aria-label="Permalink to &quot;VITE_COPYRIGHT_INFO&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>Copyright © 2024 chansee97</code></li></ul><p>页面底部版权信息</p><h2 id="开发环境" tabindex="-1">开发环境 <a class="header-anchor" href="#开发环境" aria-label="Permalink to &quot;开发环境&quot;">​</a></h2><p>开发环境变量是只有在开发中才会切换的变量，例如是否开启代理等。在<code>.env.dev</code>文件中定义这些变量。</p><h3 id="vite-http-proxy" tabindex="-1">VITE_HTTP_PROXY <a class="header-anchor" href="#vite-http-proxy" aria-label="Permalink to &quot;VITE_HTTP_PROXY&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>Y | N</code></li><li><strong>默认：</strong> <code>N</code></li></ul><p>如果你的项目需要使用代理来访问后端接口，你可以设置<code>VITE_HTTP_PROXY</code>为<code>Y</code>来开启代理。</p><h2 id="生产环境" tabindex="-1">生产环境 <a class="header-anchor" href="#生产环境" aria-label="Permalink to &quot;生产环境&quot;">​</a></h2><p>生产环境变量是只有在生产或构建产物时才需要的变量，例如是否开启gzip压缩等。在<code>.env.prod</code>文件中定义这些变量。</p><h3 id="vite-build-compress" tabindex="-1">VITE_BUILD_COMPRESS <a class="header-anchor" href="#vite-build-compress" aria-label="Permalink to &quot;VITE_BUILD_COMPRESS&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>Y | N</code></li><li><strong>默认：</strong> <code>N</code></li></ul><p>如果你的项目需要开启产物压缩，你可以设置<code>VITE_BUILD_COMPRESS</code>和<code>VITE_COMPRESS_TYPE</code>来开启压缩</p><h3 id="vite-compress-type" tabindex="-1">VITE_COMPRESS_TYPE <a class="header-anchor" href="#vite-compress-type" aria-label="Permalink to &quot;VITE_COMPRESS_TYPE&quot;">​</a></h3><ul><li><strong>类型：</strong> <code>gzip | brotliCompress | deflate | deflateRaw</code></li><li><strong>默认：</strong> <code>gzip</code></li></ul><p>设置压缩算法</p>',34),d=[r];function c(l,n,s,h,_,p){return a(),o("div",null,d)}const E=e(i,[["render",c]]);export{g as __pageData,E as default};
