import{_ as s,c as n,o as a,a3 as p}from"./chunks/framework.CokgVZ6D.js";const m=JSON.parse('{"title":"项目结构","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/directory-structure.md","filePath":"zh/guide/directory-structure.md","lastUpdated":1719483438000}'),e={name:"zh/guide/directory-structure.md"},l=p(`<h1 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h1><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nova-admmin</span></span>
<span class="line"><span>├── .vscode                          # vscode 配置文件</span></span>
<span class="line"><span>│   ├── extensions.json              # vscode 扩展插件推荐</span></span>
<span class="line"><span>│   └── settings.json                # vscode 编辑器配置</span></span>
<span class="line"><span>├── build                            # 构建相关配置</span></span>
<span class="line"><span>│   ├── plugins.ts                   # vite插件相关配置</span></span>
<span class="line"><span>│   └── proxy.ts                     # vite代理相关方法</span></span>
<span class="line"><span>├── public</span></span>
<span class="line"><span>│   └── favicon.svg                  # 站点图标</span></span>
<span class="line"><span>├── locales                          # 多语言配置</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>│   ├── assets                       # 静态资源</span></span>
<span class="line"><span>│   │   └── svg-icons                # 自定义svg图标资源</span></span>
<span class="line"><span>│   ├── components                   # 公共组件</span></span>
<span class="line"><span>│   │   ├── common                   # 框架内部组件</span></span>
<span class="line"><span>│   │   └── custom                   # 自定义组件</span></span>
<span class="line"><span>│   ├── constants                    # 常量</span></span>
<span class="line"><span>│   ├── directives                   # 自定义指令</span></span>
<span class="line"><span>│   │   ├── copy.ts                  # v-cope指令</span></span>
<span class="line"><span>│   │   └── permission.ts            # v-permission指令</span></span>
<span class="line"><span>│   ├── hooks                        # 组合式方法</span></span>
<span class="line"><span>│   │   ├── useBoolean.ts            # 组合式使用Boolean</span></span>
<span class="line"><span>│   │   ├── useEcharts.ts            # 组合式使用Echarts方法</span></span>
<span class="line"><span>│   │   ├── useLoading.ts            # 组合式使用Loading方法</span></span>
<span class="line"><span>│   │   ├── usePermission.ts         # 组合式使用Permission方法</span></span>
<span class="line"><span>│   │   └── useDefault.ts            # 组合式使用带默认值的re变量</span></span>
<span class="line"><span>│   ├── layouts                      # 全局布局组件</span></span>
<span class="line"><span>│   │   ├── components               # 布局内部组件</span></span>
<span class="line"><span>│   │   ├── leftMenu.layout.vue      # 左侧菜单布局</span></span>
<span class="line"><span>│   │   ├── topMenu.layout.vue       # 顶部菜单布局</span></span>
<span class="line"><span>│   │   └── index.vue                # 布局组件基座</span></span>
<span class="line"><span>│   ├── modules                      # 统一自动注册模块</span></span>
<span class="line"><span>│   │   ├── assets.ts                # 自动注册静态资源</span></span>
<span class="line"><span>│   │   └── directives.ts            # 自动注册指令</span></span>
<span class="line"><span>│   │   └── i18n.ts                  # 自动注册多语言</span></span>
<span class="line"><span>│   ├── router                       # 路由配置</span></span>
<span class="line"><span>│   │   ├── guard.ts                 # 路由守卫配置</span></span>
<span class="line"><span>│   │   ├── routes.inner.ts          # 固定页面路由</span></span>
<span class="line"><span>│   │   ├── routes.static.ts         # 本地静态页面路由</span></span>
<span class="line"><span>│   │   └── index.ts                 # 实例化路由导出</span></span>
<span class="line"><span>│   ├── service                      # 服务配置</span></span>
<span class="line"><span>│   │   ├── api                      # 全局接口配置</span></span>
<span class="line"><span>│   │   ├── http                     # 封装请求方法</span></span>
<span class="line"><span>│   │   │   ├── alova.ts             # 请求器实例封装</span></span>
<span class="line"><span>│   │   │   ├── config.ts            # 基本请求字段配置</span></span>
<span class="line"><span>│   │   │   ├── handle.ts            # 请求处理方法封装</span></span>
<span class="line"><span>│   │   │   └── index.ts             # 实例化请求器</span></span>
<span class="line"><span>│   │   └── index.ts                 # 请求方法导出出口</span></span>
<span class="line"><span>│   ├── store                        # 全局状态管理</span></span>
<span class="line"><span>│   │   ├── app</span></span>
<span class="line"><span>│   │   │   ├── theme.json           # 站点主题配置</span></span>
<span class="line"><span>│   │   │   └── index.ts             # 站点样式布局设置相关存储</span></span>
<span class="line"><span>│   │   ├── auth.ts                  # 用户权限相关存储</span></span>
<span class="line"><span>│   │   ├── route</span></span>
<span class="line"><span>│   │   │   ├── helper.js            # 路由转换工具方法</span></span>
<span class="line"><span>│   │   │   └── index.ts             # 路由相关存储</span></span>
<span class="line"><span>│   │   └── tab.ts                   # Tab页签相关存储</span></span>
<span class="line"><span>│   ├── styles                       # 项目样式风格</span></span>
<span class="line"><span>│   │   ├── reset.css                # 重置样式css</span></span>
<span class="line"><span>│   │   ├── transition.css           # 过渡样式css</span></span>
<span class="line"><span>│   │   └── index.css                # 统一导出出口</span></span>
<span class="line"><span>│   ├── typings                      # 类型文件</span></span>
<span class="line"><span>│   │   ├── api                      # 接口类型文件</span></span>
<span class="line"><span>│   │   ├── entities                 # 数据库表实体类型文件</span></span>
<span class="line"><span>│   │   ├── env.d.ts                 # 环境变量类型文件</span></span>
<span class="line"><span>│   │   ├── global.d.ts              # 适用全局的其他类型文件</span></span>
<span class="line"><span>│   │   ├── route.d.ts               # 路由类型文件</span></span>
<span class="line"><span>│   │   ├── router.d.ts              # 覆盖router原生类型</span></span>
<span class="line"><span>│   │   ├── service.d.ts             # 请求方法类型文件</span></span>
<span class="line"><span>│   │   ├── auto-imports.d.ts        # 自动导入方法类型文件（自动生成）</span></span>
<span class="line"><span>│   │   └── components.d.ts          # 自动导入组件类型文件（自动生成）</span></span>
<span class="line"><span>│   ├── utils                        # 工具类</span></span>
<span class="line"><span>│   │   ├── array.ts                 # 数组工具</span></span>
<span class="line"><span>│   │   ├── icon.ts                  # 图标工具</span></span>
<span class="line"><span>│   │   ├── storage.ts               # 存储封装工具</span></span>
<span class="line"><span>│   │   ├── i18n.ts                  # 多语言工具</span></span>
<span class="line"><span>│   │   └── index.ts                 # 工具类导出出口</span></span>
<span class="line"><span>│   ├── views                        # 页面</span></span>
<span class="line"><span>│   ├── App.vue                      # 根组件</span></span>
<span class="line"><span>│   └── main.ts                      # 入口文件</span></span>
<span class="line"><span>├── .editorconfig                    # 编辑器配置文件</span></span>
<span class="line"><span>├── .env                             # 通用环境变量</span></span>
<span class="line"><span>├── .env.dev                         # 开发环境变量</span></span>
<span class="line"><span>├── .env.prod                        # 生产环境变量</span></span>
<span class="line"><span>├── .gitattributes                   # git提交配置</span></span>
<span class="line"><span>├── .gitignore                       # git忽略文件配置</span></span>
<span class="line"><span>├── .npmrc                           # npm配置文件</span></span>
<span class="line"><span>├── eslint.config.js                 # eslint配置文件</span></span>
<span class="line"><span>├── index.html                       # 入口html文件</span></span>
<span class="line"><span>├── LICENSE                          # 开源协议</span></span>
<span class="line"><span>├── package.json                     # 项目依赖配置文件</span></span>
<span class="line"><span>├── README.md                        # 项目说明文档</span></span>
<span class="line"><span>├── service.config.ts                # 后台服务地址配置文件</span></span>
<span class="line"><span>├── tsconfig.json                    # typescript配置文件</span></span>
<span class="line"><span>├── unocss.config.ts                 # unocss配置文件</span></span>
<span class="line"><span>└── vite.config.ts                   # vite配置文件</span></span></code></pre></div>`,2),i=[l];function c(t,o,r,d,u,v){return a(),n("div",null,i)}const h=s(e,[["render",c]]);export{m as __pageData,h as default};
